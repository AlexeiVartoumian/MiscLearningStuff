{
    "Comment": "my transcribing state machine with file checks",
    "StartAt": "Check Transcription File Exists",
    "States": {
      "Check Transcription File Exists": {
        "Type": "Task",
        "Parameters": {
          "Bucket": "alexeitranscribefile",
          "Key.$": "States.Format('{}.json', $$.Execution.Name)"
        },
        "Resource": "arn:aws:states:::aws-sdk:s3:headObject",
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "StartCallTranscriptionJob"
          }
        ],
        "Next": "Check Sentiment File Exists"
      },
      "StartCallTranscriptionJob": {
        "Type": "Task",
        "Parameters": {
          "LanguageCode": "en-US",
          "Media": {
            "MediaFileUri": "s3://alexeitranscribefile/George_Bush_meets_with_Mali_president_Amaour_Tour√©_-_press_conference.ogg"
          },
          "TranscriptionJobName.$": "$$.Execution.Name",
          "OutputBucketName": "alexeitranscribefile"
        },
        "Resource": "arn:aws:states:::aws-sdk:transcribe:startTranscriptionJob",
        "Next": "Wait two seconds"
      },
      "Wait two seconds": {
        "Type": "Wait",
        "Seconds": 2,
        "Next": "GetTranscriptionJob",
        "Comment": "wait two seconds"
      },
      "GetTranscriptionJob": {
        "Type": "Task",
        "Parameters": {
          "TranscriptionJobName.$": "$$.Execution.Name"
        },
        "Resource": "arn:aws:states:::aws-sdk:transcribe:getTranscriptionJob",
        "Next": "Transcript Status"
      },
      "Transcript Status": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.TranscriptionJob.TranscriptionJobStatus",
            "StringEquals": "COMPLETED",
            "Next": "Check Sentiment File Exists",
            "Comment": "transcript complete"
          },
          {
            "Variable": "$.TranscriptionJob.TranscriptionJobStatus",
            "StringEquals": "IN_PROGRESS",
            "Next": "Wait two seconds",
            "Comment": "transcript processing"
          }
        ],
        "Default": "Fail"
      },
      "Check Sentiment File Exists": {
        "Type": "Task",
        "Parameters": {
          "Bucket": "alexeitranscribefile",
          "Key.$": "States.Format('{}-sentiment.json', $$.Execution.Name)"
        },
        "Resource": "arn:aws:states:::aws-sdk:s3:headObject",
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "GetObject"
          }
        ],
        "Next": "Success"
      },
      "GetObject": {
        "Type": "Task",
        "Parameters": {
          "Bucket": "alexeitranscribefile",
          "Key.$": "States.Format('{}.json', $$.Execution.Name)"
        },
        "Resource": "arn:aws:states:::aws-sdk:s3:getObject",
        "Next": "Pass"
      },
      "Pass": {
        "Type": "Pass",
        "Next": "DetectSentiment",
        "Parameters": {
          "Body.$": "States.StringToJson($.Body)"
        }
      },
      "DetectSentiment": {
        "Type": "Task",
        "Parameters": {
          "LanguageCode": "en",
          "Text.$": "$.Body.results.transcripts[0].transcript"
        },
        "Resource": "arn:aws:states:::aws-sdk:comprehend:detectSentiment",
        "Next": "Store Sentiment Result"
      },
      "Store Sentiment Result": {
        "Type": "Task",
        "Parameters": {
          "Bucket": "alexeitranscribefile",
          "Key.$": "States.Format('{}-sentiment.json', $$.Execution.Name)",
          "Body.$": "States.JsonToString($)"
        },
        "Resource": "arn:aws:states:::aws-sdk:s3:putObject",
        "Next": "Success"
      },
      "Success": {
        "Type": "Succeed"
      },
      "Fail": {
        "Type": "Fail"
      }
    }
  }